LINKOPT = lib

#//--------------------------------------------------
#// TARGET
#//--------------------------------------------------
TARGET=standalone_xip

ifneq ($(APP_NAME),)
BUILD_NAME = $(APP_NAME)
else
BUILD_NAME = standalone
endif

#//--------------------------------------------------
#// CONFIG
#//--------------------------------------------------

# SoftAP-Role ONLY
CONFIG_ONLY_AP=n
# STA-Role ONLY
CONFIG_ONLY_STA=n
ifeq ($(CONFIG_ONLY_AP),y)
CONFIG_ONLY_STA=n
endif

ifeq ($(CONFIG_ONLY_AP),y)
LIB_ROLE	= AP
else ifeq ($(CONFIG_ONLY_STA),y)
LIB_ROLE	= STA
endif

# Synchronize with the library's config.
LIB_CONFIG_FILE       =   lib/modem/libModem$(LIB_ROLE).config
ifneq ($(wildcard $(LIB_CONFIG_FILE)),)
include $(LIB_CONFIG_FILE)
endif

# HW Security Accelerator
CONFIG_USE_HW_SECURITY_ACC_SHA=n

# major lmac/umac codes are run on RAM
ifneq ($(findstring norunram, $(ALIAS)), )
CONFIG_RUNRAM=n
else
CONFIG_RUNRAM=y
endif

ifeq ($(CONFIG_ONLY_STA),n)
# SoftAP OWE support
CONFIG_SOFTAP_OWE=y
endif

# lwIP socket recovery
CONFIG_LWIP_RECOVERY=n

# RELEASE FW
CONFIG_LOG=n

#// --------------------------------------------------
#// Flash Memory size
#// --------------------------------------------------
# Set the default flash size
CONFIG_DEFAULT_FLASH_SIZE = 4M

# Convert ALIAS to lowercase for case-insensitive matching
ALIAS_LOWER := $(shell echo $(ALIAS) | tr '[:upper:]' '[:lower:]')

ifneq ($(findstring 4m, $(ALIAS_LOWER)), )
CONFIG_FLASH_SIZE = 4M
else ifneq ($(findstring 2m, $(ALIAS_LOWER)), )
CONFIG_FLASH_SIZE = 2M
else
CONFIG_FLASH_SIZE = $(CONFIG_DEFAULT_FLASH_SIZE)
endif

# EEPROM
ifneq ($(findstring eeprom, $(ALIAS)), )
DEFINE				+= -DUSE_EEPROM
DEFINE				+= -DEEPROM_I2C_CH=0
DEFINE				+= -DEEPROM_I2C_SCL=20
DEFINE				+= -DEEPROM_I2C_SDA=14
DEFINE				+= -DEEPROM_I2C_CLK=400000
DEFINE				+= -DEEPROM_I2C_DEV_ADDR=0xA0
DEFINE				+= -DEEPROM_WP_PIN=25
DEFINE				+= -DEEPROM_PAGE_WRITE_BUF_SIZE=32
endif

#// --------------------------------------------------
#// Flash MAP Profile
#// --------------------------------------------------
# Extend Flash size to maximize code/data region (only for 2MB Flash)
# factory :  916KB (FOTA/100KB_USER_DATA)
# profile1:  968KB (FOTA/8KB_USER_DATA)
# profile2:  972KB (FOTA/NO_USER_DATA)
# profile3: 1936KB (NO_FOTA/8KB_USER_DATA)
# profile4: 1944KB (NO_FOTA/NO_USER_DATA)
CONFIG_FLASH_PROFILE=profile1

#// --------------------------------------------------
#// 3rd party library
#// --------------------------------------------------
CONFIG_WPA_SUPP_CRYPTO = mbedtls

CONFIG_FREERTOS	= y
CONFIG_LWIP	= y
CONFIG_MBEDTLS	= y
CONFIG_WPA_SUPP	= y
ifeq ($(CONFIG_ONLY_STA),y)
CONFIG_SOFT_AP	=	n
else
CONFIG_SOFT_AP	=	y
endif

ifneq ($(findstring ipv6, $(ALIAS)), )
# Support IPV6
CONFIG_IPV6=y
else
CONFIG_IPV6=n
endif

#// --------------------------------------------------
#// APP Core
#// --------------------------------------------------
SDK_DIR 	=  sdk
SDK_INC	= $(SDK_DIR)/include
SDK_APPS	= $(SDK_DIR)/apps
SDK_WIFI_COMMON = $(SDK_APPS)/wifi_common

ifneq ($(findstring ATCMD,$(APP_NAME)),ATCMD)
PROJECT_FOLDER = $(APP_NAME)
else
PROJECT_FOLDER = atcmd
endif

SDK_PROJECT = $(SDK_APPS)/$(PROJECT_FOLDER)

INCLUDE	+= -I$(SDK_INC)
INCLUDE += -I$(SDK_WIFI_COMMON)
INCLUDE += -I$(SDK_PROJECT)

VPATH += $(SDK_INC):$(SDK_APPS)
VPATH += $(SDK_PROJECT):$(SDK_WIFI_COMMON)

ifneq ($(APP_NAME),)
include $(SDK_PROJECT)/.config
include $(SDK_PROJECT)/Makefile
endif

ifneq ($(findstring ov5640, $(ALIAS)), )
DEFINE  += -DBOARD_OV5640
CONFIG_EXT_RAM = y
endif

#// --------------------------------------------------
#// Alias Generated From system_info
#// --------------------------------------------------
TOP					=	.
SYSTEM				=	nrc7394
STANDARD			=	11ah
CPU				=	ARM_CM3
DEFINE				+=	-DCPU_CM3

PREFIX				=	arm-none-eabi-

DEFINE				+=	-DNRC7394
DEFINE				+=	-DINCLUDE_STANDALONE
DEFINE				+=	-DNRC7394_STANDALONE_XIP
DEFINE				+=	-DCACHE_XIP
DEFINE				+=	-DSF_WRITABLE
DEFINE				+=	-DSDK_SYSTEM_NAME=\"$(SYSTEM)\"
DEFINE				+=	-DSDK_TARGET_NAME=\"$(TARGET)\"

ifneq ($(findstring eeprom, $(ALIAS)), )
OUTPUT				=	$(SYSTEM)_$(TARGET)_$(BUILD_NAME)_$(CONFIG_FLASH_SIZE)_eeprom
else
OUTPUT				=	$(SYSTEM)_$(TARGET)_$(BUILD_NAME)_$(CONFIG_FLASH_SIZE)
endif

#// -------------------------------------------------
#// 11AH Features (common)
#// --------------------------------------------------
DEFINE				+=	-DSTANDARD_11AH
DEFINE				+=	-DLMAC_CONFIG_11AH=1
DEFINE				+=	-DINCLUDE_UMAC
DEFINE				+=	-DINCLUDE_TIM_HANDLER
DEFINE				+=	-DINCLUDE_CDC
DEFINE				+=	-DUMAC_BEACON_MONITOR
#DEFINE				+=	-DINCLUDE_PV1
#DEFINE				+=	-DNRC_NDP_PV1_SUPPORT

#//-------------------------------------------------
#// AP Features
#//--------------------------------------------------
ifeq ($(CONFIG_ONLY_STA),n)
DEFINE				+=	-DINCLUDE_ACCESS_POINT
DEFINE				+=	-DINCLUDE_UMAC_BEACON
DEFINE                          +=      -DINCLUDE_BEACON_AP_BEACON
DEFINE                          +=      -DINCLUDE_BEACON_BCMC
DEFINE				+=	-DMAX_STA=75
else
DEFINE				+=	-DMAX_STA=1
endif

#//-------------------------------------------------
#// Rate Control
#//--------------------------------------------------
DEFINE				+=	-DRC_START_MIN
DEFINE				+=	-DRC_MCS_SINGLE

#//-------------------------------------------------
#// RF
#//--------------------------------------------------
DEFINE				+=	-DNRF_NO_USE_SPI

#//-------------------------------------------------
#// LOG
#//--------------------------------------------------
ifeq ($(CONFIG_LOG),y)
DEFINE				+=	-DINCLUDE_TRACE_VERBOSE
DEFINE				+=	-DINCLUDE_TRACE_INFO
DEFINE				+=	-DINCLUDE_TRACE_ERROR
DEFINE				+=	-DINCLUDE_TRACE_ALWAYS
DEFINE				+=	-DINCLUDE_TRACE_ASSERT
DEFINE				+=	-DINCLUDE_TRACE_WAKEUP
else
DEFINE				+=	-DINCLUDE_TRACE_ERROR
DEFINE				+=	-DINCLUDE_TRACE_ASSERT
DEFINE				+=	-DINCLUDE_TRACE_ALWAYS
endif
#//-------------------------------------------------
#// CLI
#//--------------------------------------------------
ifeq ($(CONFIG_CLI),y)
DEFINE				+=	-DINCLUDE_USE_CLI
endif

#//-------------------------------------------------
#// Debug (CLI,TRACKER,STATISTICS)
#//--------------------------------------------------
ifeq ($(CONFIG_DEBUG),y)
DEFINE				+=	-DINCLUDE_LMAC_DEBUG
DEFINE				+=	-DINCLUDE_RF_DEBUG
DEFINE				+=	-DINCLUDE_PHY_DEBUG
DEFINE				+=	-DINCLUDE_BUF_TRACKER
DEFINE				+=	-DINCLUDE_EVENT_TRACKER
DEFINE				+=	-DDEBUG_MAC_STATS
else
#DEFINE				+=	-DINCLUDE_LMAC_DEBUG
DEFINE				+=	-DDEBUG_MAC_STATS
endif
DEFINE				+=	-DUTIL_TRACE_STACK

ifeq ($(CONFIG_USE_HW_SECURITY_ACC_BN), y)
DEFINE				+=	-DINCLUDE_HW_SECURITY_ACC_BN
DEFINE				+=	-DINCLUDE_HW_SECURITY_ACC_BN_MOD
DEFINE				+=	-DINCLUDE_HW_SECURITY_ACC_BN_MUL_MOD
endif

#//-------------------------------------------------
#// Configuration
#//--------------------------------------------------
DEFINE 				+=	-DLMAC_CONFIG_FREERTOS=1
DEFINE				+=	-DLMAC_CONFIG_NAN=0
DEFINE				+=	-DLMAC_CONFIG_BUFFER_SIZE=512
ifeq ($(CONFIG_USE_SMALL_MEM),y)
# 32KB Pool
DEFINE				+=	-DLMAC_CONFIG_DL_DESCRIPTOR=16
else
# 40.5KB Pool
DEFINE				+=	-DLMAC_CONFIG_DL_DESCRIPTOR=32
endif

ifeq ($(CONFIG_AUTH_CONTROL),y)
DEFINE				+=	-DLMAC_MODEM_RECOVERY_TIME_MS=120000
else
DEFINE				+=	-DLMAC_MODEM_RECOVERY_TIME_MS=10000
endif
DEFINE				+=	-DLMAC_WDT_RESET_TIME_MS=20000

DEFINE 				+= -DEXCLUDE_FDK_MAC

#// --------------------------------------------------
#// Common Tool
#// --------------------------------------------------
CC					=	$(PREFIX)g++
AS					=	$(PREFIX)g++
AR					=	$(PREFIX)ar
CP					=	$(PREFIX)objcopy
OD					=	$(PREFIX)objdump
SZ					=	$(PREFIX)size
NM					=	$(PREFIX)nm
ST					=	$(PREFIX)strip
READELF				=	$(PREFIX)readelf

#// --------------------------------------------------
#// Common Path
#// --------------------------------------------------
OUT_PATH			=	out/$(SYSTEM)/$(TARGET)/$(BUILD_NAME)
OBJ_PATH			=	$(OUT_PATH)/objs

LIB_PATH			=	lib
LIB_MODEM_PATH		=	$(LIB_PATH)/modem
LIB_MODEM_INC_PATH		=	$(LIB_MODEM_PATH)/inc
LIB_MODEM_SRC_PATH		=	$(LIB_MODEM_PATH)/src

LIB_MODEM_SYSTEM_INC_PATH			=	$(LIB_MODEM_INC_PATH)/system
LIB_MODEM_WLAN_INC_PATH			=	$(LIB_MODEM_INC_PATH)/wlan
LIB_MODEM_HAL_INC_PATH			=	$(LIB_MODEM_INC_PATH)/hal
LIB_MODEM_HOST_INC_PATH			=	$(LIB_MODEM_INC_PATH)/host
LIB_MODEM_UTIL_INC_PATH			=	$(LIB_MODEM_INC_PATH)/util
LIB_MODEM_UMAC_INC_PATH			=	$(LIB_MODEM_INC_PATH)/umac

LIB_MODEM_FDK_LIB_PATH		=	$(LIB_MODEM_PATH)/fdk
LIB_MODEM_FDK_DRV_PATH		=	$(LIB_MODEM_FDK_LIB_PATH)/drv
LIB_MODEM_FDK_DRV_SYS_PATH		=	$(LIB_MODEM_FDK_DRV_PATH)/$(SYSTEM)
LIB_MODEM_FDK_STDDRV_PATH		=	$(LIB_MODEM_FDK_LIB_PATH)/soc/StdDriver
LIB_MODEM_FDK_STDDRV_SPEC_PATH	=	$(LIB_MODEM_FDK_STDDRV_PATH)/NRCXXXX
LIB_MODEM_FDK_NRC_PATH		=	$(LIB_MODEM_FDK_LIB_PATH)/nrc
LIB_MODEM_FDK_UTIL_PATH		=	$(LIB_MODEM_FDK_LIB_PATH)/util
LIB_MODEM_FDK_HAL_PATH		=	$(LIB_MODEM_FDK_LIB_PATH)/hal
LIB_MODEM_FDK_API_PATH		=	$(LIB_MODEM_FDK_LIB_PATH)/api
LIB_MODEM_FDK_SYSTEM_PATH		=	$(LIB_MODEM_FDK_LIB_PATH)/system
LIB_MODEM_FDK_CSP_PATH		=	$(LIB_MODEM_FDK_LIB_PATH)/soc/CSP/nrc_devices
LIB_MODEM_FDK_DEVICE_PATH		=	$(LIB_MODEM_FDK_LIB_PATH)/soc/Device/Newracom/$(call UC,$(SYSTEM))/Include
LIB_MODEM_FDK_CMSIS_PATH		=	$(LIB_MODEM_FDK_LIB_PATH)/soc/CMSIS/Core/Include


#// BDF_PATH
BDF_PATH	=	bdf
INCLUDE += -I$(BDF_PATH)
VPATH	+= $(BDF_PATH)

#// --------------------------------------------------
#// Include Path
#// --------------------------------------------------
INCLUDE += -I$(LIB_MODEM_PATH)
INCLUDE	+= -I$(LIB_MODEM_INC_PATH)
INCLUDE	+= -I$(LIB_MODEM_SYSTEM_INC_PATH)
INCLUDE	+= -I$(LIB_MODEM_WLAN_INC_PATH)
INCLUDE	+= -I$(LIB_MODEM_HAL_INC_PATH)
INCLUDE	+= -I$(LIB_MODEM_HOST_INC_PATH)
INCLUDE	+= -I$(LIB_MODEM_UTIL_INC_PATH)
INCLUDE	+= -I$(LIB_MODEM_UMAC_INC_PATH)
INCLUDE	+= -I$(LIB_MODEM_FDK_LIB_PATH)
INCLUDE	+= -I$(LIB_MODEM_FDK_DRV_PATH)
INCLUDE	+= -I$(LIB_MODEM_FDK_DRV_SYS_PATH)
INCLUDE	+= -I$(LIB_MODEM_FDK_STDDRV_PATH)
INCLUDE	+= -I$(LIB_MODEM_FDK_STDDRV_SPEC_PATH)
INCLUDE	+= -I$(LIB_MODEM_FDK_NRC_PATH)
INCLUDE	+= -I$(LIB_MODEM_FDK_UTIL_PATH)
INCLUDE	+= -I$(LIB_MODEM_FDK_HAL_PATH)
INCLUDE	+= -I$(LIB_MODEM_FDK_API_PATH)
INCLUDE	+= -I$(LIB_MODEM_FDK_SYSTEM_PATH)
INCLUDE	+= -I$(LIB_MODEM_FDK_CSP_PATH)
INCLUDE	+= -I$(LIB_MODEM_FDK_DEVICE_PATH)
INCLUDE	+= -I$(LIB_MODEM_FDK_CMSIS_PATH)

include make/configure-in.os

#// --------------------------------------------------
#// Specific LD File
#// --------------------------------------------------
ifeq ($(CONFIG_RUNRAM), y)
ifeq ($(CONFIG_EXT_RAM), y)
LD_FILE_NAME = cm3_$(TARGET)_extram_runram.ld
else
LD_FILE_NAME = cm3_$(TARGET)_runram.ld
endif
else
ifeq ($(CONFIG_EXT_RAM), y)
LD_FILE_NAME = cm3_$(TARGET)_extram.ld
else
LD_FILE_NAME = cm3_$(TARGET).ld
endif
endif

LD_FILE = $(LIB_MODEM_PATH)/$(LD_FILE_NAME)

include make/configure-in.flash

#// --------------------------------------------------
#// Source Files
#// --------------------------------------------------
VPATH	+= $(LIB_MODEM_SRC_PATH)
CSRCS   += standalone.c
CSRCS	+= bdf_api.c

#// --------------------------------------------------
#// System/Target Dependent Define
#// --------------------------------------------------
# PRO_FPGA : 2STA platform and no RF
DEFINE	+= -DCONFIG_OS_FREERTOS
DEFINE	+= -DPRO_FPGA
ifeq ($(CONFIG_USE_SMALL_MEM),y)
DEFINE	+= -DconfigTOTAL_HEAP_SIZE=60000
else
ifeq ($(CONFIG_IPV6),y)
DEFINE	+= -DconfigTOTAL_HEAP_SIZE=220000
else
ifneq ($(findstring ov5640, $(ALIAS)), )
ifeq ($(CONFIG_EXT_RAM), y)
DEFINE	+= -DconfigTOTAL_HEAP_SIZE=107520
else
DEFINE	+= -DconfigTOTAL_HEAP_SIZE=511960
endif
else
DEFINE	+= -DconfigTOTAL_HEAP_SIZE=320000
endif
endif #ipv6
endif #small ram

#// --------------------------------------------------
#// Build Information
#// --------------------------------------------------
PWD := $(shell pwd)
UNAME := "$(shell uname -a)"
TIMEFMT := --format="- %e Seconds"

#// --------------------------------------------------
#// Vendor-Specific Config
#//--------------------------------------------------
#include make/Makefile.vendor

#// --------------------------------------------------
#// Build Flag
#// --------------------------------------------------
ARCH_FLAGS	= -mcpu=cortex-m3 -mthumb
SYS_FLAGS	= --specs=nosys.specs

CPPFLAGS = --std=gnu++1y -Wno-literal-suffix -fpermissive -fno-rtti

CFLAGS 	+= -x none -Werror -Wall -Wno-unused-value -Wno-unused-variable -Wno-unused-but-set-variable -Wno-unused-function
CFLAGS	+= -Wno-address-of-packed-member
CFLAGS	+= -fno-common -fno-exceptions -gdwarf-2 -ffunction-sections -fdata-sections
CFLAGS	+= -Os
CFLAGS	+= $(INCLUDE) $(ARCH_FLAGS) $(DEFINE)

LFLAGS	= -nostartfiles -Wl,--gc-sections
LFLAGS	+= $(ARCH_FLAGS) $(SYS_FLAGS)
LFLAGS	+= -L$(LIB_PATH) -Os -Wl,-Map=$(OUT_PATH)/$(OUTPUT).map
LFLAGS	+= -gdwarf-2
LFLAGS	+= -T$(LD_FILE)

CPFLAGS	= -O binary
ODFLAGS = -S -C --demangle
ASFLAGS	=
NMFLAGS	= -S --demangle --size-sort -s -r

#// --------------------------------------------------
#// Others
#//--------------------------------------------------
include make/Makefile.feature
include make/Makefile.feature.lib
include make/Makefile.common
